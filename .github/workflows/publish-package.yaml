name: Tests & Publishes to PyPI

on:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

env:
  PROJECT_NAME: mealpy

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4 # N√™n d√πng phi√™n b·∫£n m·ªõi nh·∫•t
        with:
          fetch-depth: 9
          submodules: false

      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5 # C·∫≠p nh·∫≠t l√™n v5 n·∫øu c√≥
        with:
          python-version: ${{ matrix.python-version }}

      # B∆∞·ªõc m·ªõi: C·∫≠p nh·∫≠t Pip v√† c√°c build tools c∆° b·∫£n cho T·∫§T C·∫¢ c√°c phi√™n b·∫£n Python
      - name: Upgrade pip and setuptools/wheel
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine

      - uses: actions/cache@v3
        id: depcache
        with:
          path: deps
          key: requirements-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Download dependencies
        if: steps.depcache.outputs.cache-hit != 'true'
        run: |
          pip download --dest=deps -r requirements.txt

      - name: Install dependencies
        run: |
          pip install -U --no-index --find-links=deps deps/*
          pip install pytest pytest-cov flake8

      - name: Run tests
        run: |
          pytest --doctest-modules --junitxml=junit/pytest-results-${{ matrix.python-version }}.xml --cov=$PROJECT_NAME --cov-report=xml tests/
          flake8 tests/

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/pytest-results-${{ matrix.python-version }}.xml
        if: always()

      # Lo·∫°i b·ªè ƒëi·ªÅu ki·ªán 'if' ·ªü ƒë√¢y v√¨ ƒë√£ c√≥ b∆∞·ªõc upgrade chung ·ªü tr√™n
      - name: Create distribution package
        run: python setup.py sdist bdist_wheel
        if: matrix.python-version == 3.11 # Gi·ªØ nguy√™n ƒëi·ªÅu ki·ªán n√†y n·∫øu b·∫°n ch·ªâ mu·ªën t·∫°o dist cho 3.11

      - name: Upload distribution package
        uses: actions/upload-artifact@v4
        with:
          name: dist-package-${{ matrix.python-version }}
          path: dist
        if: matrix.python-version == 3.11

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download a distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-package-3.11 # ƒê·∫£m b·∫£o t·∫£i ƒë√∫ng phi√™n b·∫£n ƒë∆∞·ª£c t·∫°o
          path: dist

      - name: Publish distribution üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          attestations: false

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          attestations: true